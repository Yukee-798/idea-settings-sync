<templateSet group="JavaScript">
  <template name="csl" value="console.log($END$)" description="console.log()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ip{" value="import {$ITEM$$END$} from &quot;$MODULE$&quot;;&#10;" description="import 语句 - 从 ''a'' 导入 {b}" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ipda" value="import * as $ITEM$ from &quot;$MODULE$&quot;;&#10;$END$" description="import 语句 - 从 'a' 导入 * as b" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ipd" value="import $ITEM$ from &quot;$MODULE$&quot;;&#10;$END$" description="import 语句 - 从 'a' 导入 b" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="epa" value="export * from &quot;$MODULE$&quot;;&#10;$END$" description="导出语句 - 从 'a' 导出 *" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ep{" value="export {$ITEM$$END$} from &quot;$MODULE$&quot;;&#10;" description="导出语句 - 从 ''a'' 导出 {b}" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ep" value="export $END$&#10;" description="导出语句 - export {b}" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mde" value="module.exports = $END$" description="导出语句 - module.exports = a" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cse" value="console.error($END$)" description="console.error()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="csw" value="console.warn($END$)" description="console.warn()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="csi" value="console.info($END$)" description="console.info()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cst" value="console.trace($END$)" description="console.trace()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="caf" value="const $NAME$ = () =&gt; {&#10;$SELECTION$&#10;}" description="使用箭头函数环绕" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fori" value="for (let i = 0; i &lt; $VAR$; i++) {&#10;  $END$&#10;}" description="迭代(for..in)" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="af" value="() =&gt; {&#10;$END$&#10;}" description="匿名箭头函数" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="epd" value="export default $END$&#10;" description="导出语句 - export {b}" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="epdaf" value="const $TM_FILENAME_BASE$ = () =&gt; {&#10;};&#10;&#10;export default $TM_FILENAME_BASE$; " description="Creates a arrow function  and export default it" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="camelCase(fileNameWithoutExtension())" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="epaf" value="export const $1$ = () =&gt; {&#10;$END$&#10;};" description="Creates a arrow function  and export it" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="czs" value="import { StateCreator } from 'zustand'&#10;import { GlobalState, Middlewares } from &quot;./index&quot;&#10;&#10;export interface $SLICE_INTERFACE$ {&#10;}&#10;&#10;const create$SLICE_INTERFACE$: StateCreator&lt;GlobalState, Middlewares, [], $SLICE_INTERFACE$&gt; = (set, get, store) =&gt; ({&#10;})&#10;&#10;export default create$SLICE_INTERFACE$" description="创建 zustand slice" toReformat="true" toShortenFQNames="true">
    <variable name="SLICE_INTERFACE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="czis" value="import { create } from 'zustand'&#10;import { devtools, persist } from 'zustand/middleware'&#10;import { immer } from 'zustand/middleware/immer'&#10;import createBearSlice, { BearSlice } from './bearSlice'&#10;&#10;export type GlobalState = BearSlice &#10;&#10;export type Middlewares = [&#10;  [&quot;zustand/devtools&quot;, never],&#10;  [&quot;zustand/immer&quot;, never],&#10;  // ['zustand/persist', GlobalState]&#10;]&#10;&#10;const useBoundStore = create&lt;GlobalState&gt;()(&#10;  persist(&#10;    immer(&#10;      devtools(&#10;        (...a) =&gt; ({&#10;          ...createBearSlice(...a),&#10;        }),&#10;        {&#10;          name: 'myStore',&#10;        }&#10;      )&#10;    ),&#10;    {&#10;      name: 'bear',&#10;    }&#10;  )&#10;)&#10;&#10;export default useBoundStore" description="创建 zustand index store" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>